require(class) # para kNN
require(MASS) # Para los datos
data(fgl)
?fgl
str(fgl)
require(ggplot2)
require(tidyr)
names(fgl)
fgl %>%
pivot_longer(cols = c("RI","Na","Mg","Al","Si","K","Ca","Ba","Fe"), values_to = 'values', names_to = 'oxides') %>%
ggplot(aes(x = type, y = values)) + geom_boxplot() +
facet_grid(. ~ oxides)
fgl %>%
pivot_longer(cols = c("RI","Na","Mg","Al","Si","K","Ca","Ba","Fe"), values_to = 'values', names_to = 'oxides') %>%
ggplot(aes(x = type, y = values)) + geom_boxplot() +
facet_grid(. ~ oxides, scales = 'free',rows = 3, cols = 3)
fgl %>%
pivot_longer(cols = c("RI","Na","Mg","Al","Si","K","Ca","Ba","Fe"), values_to = 'values', names_to = 'oxides') %>%
ggplot(aes(x = type, y = values)) + geom_boxplot() +
facet_grid(. ~ oxides, scales = 'free_y', rows = 3, cols = 3)
fgl %>%
pivot_longer(cols = c("RI","Na","Mg","Al","Si","K","Ca","Ba","Fe"), values_to = 'values', names_to = 'oxides') %>%
ggplot(aes(x = type, y = values)) + geom_boxplot() +
facet_grid(. ~ oxides, scales = c('free'), rows = 3, cols = 3)
fgl %>%
pivot_longer(cols = c("RI","Na","Mg","Al","Si","K","Ca","Ba","Fe"), values_to = 'values', names_to = 'oxides') %>%
ggplot(aes(x = type, y = values)) + geom_boxplot() +
facet_grid(. ~ oxides, rows = 3, cols = 3)
fgl %>%
pivot_longer(cols = c("RI","Na","Mg","Al","Si","K","Ca","Ba","Fe"), values_to = 'values', names_to = 'oxides') %>%
ggplot(aes(x = type, y = values)) + geom_boxplot() +
facet_grid(oxides ~ ., scales = c('free'), rows = 3, cols = 3)
fgl %>%
pivot_longer(cols = c("RI","Na","Mg","Al","Si","K","Ca","Ba","Fe"), values_to = 'values', names_to = 'oxides') %>%
ggplot(aes(x = type, y = values)) + geom_boxplot() +
facet_grid(oxides ~ .)
fgl %>%
pivot_longer(cols = c("RI","Na","Mg","Al","Si","K","Ca","Ba","Fe"), values_to = 'values', names_to = 'oxides') %>%
ggplot(aes(x = type, y = values)) + geom_boxplot() +
facet_grid(oxides ~ ., scales = "free", rows = 3, cols = 3)
fgl %>%
pivot_longer(cols = c("RI","Na","Mg","Al","Si","K","Ca","Ba","Fe"), values_to = 'values', names_to = 'oxides') %>%
ggplot(aes(x = type, y = values)) + geom_boxplot() +
facet_grid(oxides ~ ., scales = "free")
fgl %>%
pivot_longer(cols = c("RI","Na","Mg","Al","Si","K","Ca","Ba","Fe"), values_to = 'values', names_to = 'oxides') %>%
ggplot(aes(x = type, y = values)) + geom_boxplot() +
facet_grid(oxides ~ ., rows = 3, cols = 3)
fgl %>%
pivot_longer(cols = c("RI","Na","Mg","Al","Si","K","Ca","Ba","Fe"), values_to = 'values', names_to = 'oxides') %>%
ggplot(aes(x = type, y = values)) + geom_boxplot() +
facet_grid(oxides ~ ., scales = "fixed", rows = 3, cols = 3)
fgl %>%
pivot_longer(cols = c("RI","Na","Mg","Al","Si","K","Ca","Ba","Fe"), values_to = 'values', names_to = 'oxides') %>%
ggplot(aes(x = type, y = values)) + geom_boxplot() +
facet_grid(oxides ~ ., rows = 3, cols = 3)
fgl %>%
pivot_longer(cols = c("RI","Na","Mg","Al","Si","K","Ca","Ba","Fe"), values_to = 'values', names_to = 'oxides') %>%
ggplot(aes(x = type, y = values)) + geom_boxplot() +
facet_grid(oxides ~ ., scales = 'free')
fgl %>%
pivot_longer(cols = c("RI","Na","Mg","Al","Si","K","Ca","Ba","Fe"), values_to = 'values', names_to = 'oxides') %>%
ggplot(aes(x = type, y = values)) + geom_boxplot() +
# facet_grid(oxides ~ ., scales = 'free')
facet_wrap(facets = oxides,nrow = 3, ncol = 3)
fgl %>%
pivot_longer(cols = c("RI","Na","Mg","Al","Si","K","Ca","Ba","Fe"), values_to = 'values', names_to = 'oxides') %>%
ggplot(aes(x = type, y = values)) + geom_boxplot() +
# facet_grid(oxides ~ ., scales = 'free')
facet_wrap(oxides ~ .,nrow = 3, ncol = 3)
fgl %>%
pivot_longer(cols = c("RI","Na","Mg","Al","Si","K","Ca","Ba","Fe"), values_to = 'values', names_to = 'oxides') %>%
ggplot(aes(x = type, y = values)) + geom_boxplot() +
# facet_grid(oxides ~ ., scales = 'free')
facet_wrap(oxides ~ .,nrow = 3, ncol = 3, scales = 'free')
fgl %>%
pivot_longer(cols = c("RI","Na","Mg","Al","Si","K","Ca","Ba","Fe"), values_to = 'values', names_to = 'oxides') %>%
ggplot(aes(x = type, y = values)) + geom_boxplot() +
facet_wrap(oxides ~ ., scales = 'free')
fgl %>%
pivot_longer(cols = c("RI","Na","Mg","Al","Si","K","Ca","Ba","Fe"), values_to = 'values', names_to = 'oxides') %>%
ggplot(aes(x = type, y = values)) + geom_boxplot() +
facet_grid(oxides ~ ., scales = 'free')
fgl %>%
pivot_longer(cols = c("RI","Na","Mg","Al","Si","K","Ca","Ba","Fe"), values_to = 'values', names_to = 'oxides') %>%
ggplot(aes(x = type, y = values)) + geom_boxplot() +
facet_wrap(oxides ~ ., scales = 'free')
# La columna 10 es la que tiene nuestra variable de clase, entonces:
x <- scale(fgl[,1:9])
apply(x, 2, sd) # aplicaci칩n de la familia apply
set.seed(111000)
test <- sample(1:214,10)
N1 <- knn(train = x[-test,], test = x[test,], cl = fgl$type[-test], k = 1)
N5 <- knn(train = x[-test,], test = x[test,], cl = fgl$type[-test], k = 5)
data.frame(fgl$type[test],N1,N5)
?gamlr
install.packages('gamlr')
?gamlr
# Datos
credito <- readRDS('/Users/jacobmunozc/Dropbox/Curso Machine Learninng SFC/Consolidado/ML-IA/Sesio패n 4 - Regresio패n y clasificacio패n 2/Data/credit_class.rds')
dim(credito)
head(credito)
summary(logit1)
logit1 <- glm(Default ~ duration + amount + installment + age +
factor(history) + factor(purpose) + factor(foreign) +
factor(rent),
data = credito, family = 'binomial')
summary(logit1)
require(Matrix)
cred.matrix <- sparse.model.matrix(Default ~ .**2, data = credito)[,-1]
cred.matrix
default <- credito$Default
cred.score <- cv.gamlr(cred.matrix, default, family = 'binomial')
cred.matrix <- sparse.model.matrix(Default ~ .**2, data = credito)[,-1]
default <- credito$Default
cred.score <- cv.gamlr(cred.matrix, default, family = 'binomial')
require(gamlr)  # ML
cred.score <- cv.gamlr(cred.matrix, default, family = 'binomial')
plot(cred.score)
predicted <- predict(cred.score$gamlr,cred.matrix,type = 'response')
predicted <- drop(predicted) # quitarle el formato de sparse matrix
boxplot(predicted ~ default, xlab = 'default', ylab = 'Prob. default')
